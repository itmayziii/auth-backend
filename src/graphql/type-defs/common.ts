export const UUIDComment = `
The data type uuid stores Universally Unique Identifiers (UUID) as defined by RFC 4122, ISO/IEC 9834-8:2005,
and related standards. (Some systems refer to this data type as a globally unique identifier, or GUID, instead.)
This identifier is a 128-bit quantity that is generated by an algorithm chosen to make it very unlikely that the 
same identifier will be generated by anyone else in the known universe using the same algorithm.
Therefore, for distributed systems, these identifiers provide a better uniqueness guarantee than sequence generators,
which are only unique within a single database.
`

export function createdAtComment (resourceName: string): string {
  return `When the ${resourceName} was created at, this value should never change.`
}

export function updatedAtComment (resourceName: string): string {
  return `When the ${resourceName} was last updated. This value will change every time an update occurs on the ${resourceName} record.`
}
